#version 450
#extension GL_EXT_samplerless_texture_functions : require
layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

#include "rgtc.h"

layout(set = 0, binding = 0, r8) writeonly uniform image2D uOutputR;
layout(set = 0, binding = 0, rg8) writeonly uniform image2D uOutputRG;
layout(set = 0, binding = 1) uniform utexture2D uInput;

layout(push_constant) uniform Registers
{
    ivec2 resolution;
} registers;

layout(constant_id = 0) const bool DUAL_COMPONENT = false;

ivec2 build_coord()
{
    ivec2 base = ivec2(gl_WorkGroupID.xy) * 8;
    base.x += 4 * (int(gl_LocalInvocationID.z) & 1);
    base.y += 2 * (int(gl_LocalInvocationID.z) & 2);
    base += ivec2(gl_LocalInvocationID.xy);
    return base;
}

void main()
{
    ivec2 coord = build_coord();
    if (any(greaterThanEqual(coord, registers.resolution)))
        return;

    ivec2 tile_coord = coord >> 2;
    ivec2 pixel_coord = coord & 3;
    int linear_pixel = 4 * pixel_coord.y + pixel_coord.x;
    uvec4 payload = texelFetch(uInput, tile_coord, 0);

    vec4 rg = vec4(0);
    rg.x = decode_alpha_rgtc(payload.xy, linear_pixel);
    if (DUAL_COMPONENT)
        rg.y = decode_alpha_rgtc(payload.zw, linear_pixel);

    if (DUAL_COMPONENT)
        imageStore(uOutputRG, coord, rg);
    else
        imageStore(uOutputR, coord, rg);
}