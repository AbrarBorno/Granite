set(SKIP_GLSLANG_INSTALL ON CACHE BOOL "" FORCE)
set(SHADERC_SKIP_INSTALL ON CACHE BOOL "" FORCE)
set(SPIRV_HEADERS_SKIP_EXAMPLES ON CACHE BOOL "" FORCE)
set(SPIRV_HEADERS_SKIP_INSTALL ON CACHE BOOL "" FORCE)
set(ENABLE_HLSL ON CACHE BOOL "" FORCE)
set(ENABLE_OPT OFF CACHE BOOL "" FORCE)
set(ENABLE_GLSLANG_INSTALL OFF CACHE BOOL "" FORCE)
set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
set(SHADERC_THIRD_PARTY_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}" CACHE STRING "Third party path." FORCE)
set(SPIRV_CHECK_CONTEXT OFF CACHE BOOL "Disable SPIR-V IR context checking." FORCE)
set(SPIRV-Headers_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/spirv-headers" CACHE STRING "SPIRV-Headers path")
set(SHADERC_SKIP_TESTS ON CACHE BOOL "" FORCE)
set(FOSSILIZE_RAPIDJSON_INCLUDE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/rapidjson/include" CACHE STRING "Fossilize rapidjson path." FORCE)
set(FOSSILIZE_VULKAN_INCLUDE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/khronos/vulkan-headers/include/vulkan" CACHE STRING "Fossilize Vulkan path." FORCE)
set(MUFFT_ENABLE_FFTW OFF CACHE BOOL "Disable FFTW tests." FORCE)

add_subdirectory(spirv-cross EXCLUDE_FROM_ALL)
add_subdirectory(renderdoc EXCLUDE_FROM_ALL)
add_subdirectory(shaderc EXCLUDE_FROM_ALL)
add_subdirectory(stb)

if ((NOT ANDROID) AND GRANITE_ASTC_ENCODER_COMPRESSION)
    if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86)|(X86)|(amd64)|(AMD64)")
        message("Enabling SSE 4.1 path for astcenc")
        set(ISA_SSE41 ON CACHE BOOL "" FORCE)
    else()
        set(ISA_NONE ON CACHE BOOL "" FORCE)
    endif()
    set(DECOMPRESSOR OFF)
    set(UNITTEST OFF)
    set(CLI_BUILD OFF CACHE BOOL "" FORCE)
    add_subdirectory(astc-encoder EXCLUDE_FROM_ALL)
    if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86)|(X86)|(amd64)|(AMD64)")
        add_library(astc-encoder ALIAS astcenc-sse4.1-static)
    else()
        add_library(astc-encoder ALIAS astcenc-none-static)
    endif()
endif()

add_subdirectory(meshoptimizer EXCLUDE_FROM_ALL)
add_subdirectory(mikktspace)
add_subdirectory(muFFT EXCLUDE_FROM_ALL)
add_subdirectory(libco EXCLUDE_FROM_ALL)

set(FOSSILIZE_CLI OFF CACHE BOOL "Fossilize CLI." FORCE)
set(FOSSILIZE_TESTS OFF CACHE BOOL "Fossilize tests." FORCE)
if (GRANITE_VULKAN_FOSSILIZE)
    add_subdirectory(fossilize EXCLUDE_FROM_ALL)
endif()

add_library(granite-rapidjson INTERFACE)
target_include_directories(granite-rapidjson INTERFACE
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${CMAKE_CURRENT_SOURCE_DIR}/rapidjson/include)

add_library(granite-volk-headers INTERFACE)
target_include_directories(granite-volk-headers INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/volk)
target_include_directories(granite-volk-headers INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/khronos/vulkan-headers/include)

# volk must be STATIC.
add_library(granite-volk STATIC volk/volk.c volk/volk.h)
if (WIN32)
    target_compile_definitions(granite-volk PRIVATE VK_USE_PLATFORM_WIN32_KHR)
else()
    target_link_libraries(granite-volk PRIVATE dl)
endif()
target_link_libraries(granite-volk PRIVATE granite-volk-headers)

if ((NOT ANDROID) AND (${GRANITE_PLATFORM} MATCHES "GLFW"))
    set(GLFW_BUILD_TESTS OFF)
    add_subdirectory(glfw EXCLUDE_FROM_ALL)
endif()

if (ANDROID AND GRANITE_AUDIO)
    add_subdirectory(oboe EXCLUDE_FROM_ALL)
    target_compile_options(oboe PUBLIC -Wno-unused-parameter)
    target_compile_features(oboe PRIVATE cxx_std_17)
endif()
